{
  "default": {
    "ignore": [
      "^Get.+",
      "^List.+",
      "^Delete.+",
      "^Describe.+"
    ]
  },
  "IAM": {
    "serviceNames": ["iam"],
    "ignore": [
      "^DeactivateMfaDevice",
      "^GenerateCredentialReport"
    ],
    "valid": {
      "CreateGroup": {
        "location": {
          "keys": [
            "response_body",
            "CreateGroupResponse",
            "CreateGroupResult",
            "Group",
            "Arn"
          ]
        },
        "map_id": "object.group.arn"
      },
      "CreateUser": {
        "location": {
          "keys": [
            "response_body",
            "CreateUserResponse",
            "CreateUserResult",
            "User",
            "Arn"
          ]
        },
        "map_id": "object.user.arn"
      },
      "UpdateUser": {
        "location": {
          "keys": [
            "request_body",
            "UserName"
          ]
        },
        "map_id": "object.user.user_name"
      }
    }
  },
  "SWF": {
    "serviceNames": ["swf", "SimpleWorkflowService"],
    "ignore": [],
    "valid": {}
  },
  "SQS": {
    "serviceNames": ["queue"],
    "ignore": [],
    "valid": {
      "CreateQueue": {
        "location": {
          "keys": [
            "response_body",
            "CreateQueueResponse",
            "CreateQueueResult",
            "QueueUrl"
          ]
        },
        "map_id": "object.queue.queue_url"
      }
    }
  },
  "S3": {
    "serviceNames": ["s3"],
    "ignore": [],
    "valid": {
      "PutBucket": {
        "location": {
          "keys": [
            "request_headers",
            "Host"
          ],
          "regex": "[^\\.]+"
        },
        "map_id": "object.bucket.bucket_name",
        "region": {
          "keys": [
            "request_body",
            "CreateBucketConfiguration",
            "LocationConstraint"
          ]
        }
      }
    }
  },
  "CloudFormation": {
    "serviceNames": ["cloudformation"],
    "ignore": [],
    "valid": {
      "CreateStack": {
        "location": {
          "keys": [
            "response_body",
            "CreateStackResponse",
            "CreateStackResult",
            "StackId"
          ]
        },
        "map_id": "object.stack.stack_id",
        "region": {
          "keys": [
            "request_headers",
            "Host"
          ],
          "regex": "(us|eu|ap|sa)-(east|west|south|northeast|southeast|central)-(1|2)"
        }
      }
    }
  },
  "EC2": {
    "serviceNames": ["ec2"],
    "ignore": [],
    "valid": {
      "RunInstances": {
        "location": {
          "keys": [
            "response_body",
            "RunInstancesResponse",
            "instancesSet",
            "item",
            "instanceId"
          ]
        },
        "region": {
          "keys": [
            "response_body",
            "RunInstancesResponse",
            "instancesSet",
            "item",
            "placement",
            "availabilityZone"
          ]
        },
        "map_id": "object.instance.instance_id"
      },
      "CreateSecurityGroup": {
        "location": {
          "keys": [
            "response_body",
            "CreateSecurityGroupResponse",
            "groupId"
          ]
        },
        "region": {
          "keys": [
            "request_headers",
            "Host"
          ],
          "regex": "(us|eu|ap|sa)-(east|west|south|northeast|southeast|central)-(1|2)"
        },
        "map_id": "object.security_group.group_id"
      },
      "CreateVpc": {
        "location": {
          "keys": [
            "response_body",
            "CreateVpcResponse",
            "vpc",
            "vpcId"
          ]
        },
        "region": {
          "keys": [
            "request_headers",
            "Host"
          ],
          "regex": "(us|eu|ap|sa)-(east|west|south|northeast|southeast|central)-(1|2)"
        },
        "map_id": "object.vpc.vpc_id"
      }
    }
  }
}
